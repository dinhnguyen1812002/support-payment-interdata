version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: laravel-app
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
            - ./docker/php.ini:/usr/local/etc/php/conf.d/custom.ini
        networks:
            - app-network
        depends_on:
            - mysql
            - redis

    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - .:/var/www
            - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app-network
        depends_on:
            - app

    mysql:
        image: mysql:8.0
        container_name: mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - mysql-data:/var/lib/mysql
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: redis
        restart: unless-stopped
        networks:
            - app-network

    reverb:
        image: laravel-app
        container_name: reverb
        restart: unless-stopped
        working_dir: /var/www
        command: php artisan reverb:start
        networks:
            - app-network
        depends_on:
            - app
            - redis

networks:
    app-network:
        driver: bridge

volumes:
    mysql-data:
        driver: local
